eslint를 잘 활용하려면 CI에서 돌리는 것이 가장 효율적
CI - continuous intergration

여러 개발자들이 한 저장소에 머지를 하면서 개발을 하는데 
설정이 서로 달라서 문제가 생기기 쉬움

똑같은 환경에서 똑같은 테스트와 배포를 하도록 해주는 것을 CI라고 함
지정된 환경에서만 스크립트를 돌리도록 함

서로 환경이 달라서 생기는 문제를 방지하기 위해 CI에서 검사를 한 뒤 머지를 못하도록 막앙줌


./node_modules/.bin/eslint ch06_2/**/* 를 통해서 에러를 검사할 수 있음

-----------------------------------------------

packacge.json 의 script 영역은 유저가 정의하는 script를 넣을 수 있음

packacge.json 에 script 영역에 "lint" : "./node_modules/.bin/eslint ch06_1/**/*"

이런식으로 지정해두면 npm run lint 이런식으로 동일한 기능의 명령어를 실행 가능


-----------------------------------------------

yarn - npm과 유사함

npm install -g yarn 
-g 는 글로벌이라는 뜻

yarn은 install 대신 add를 사용
yarn add decamelize <- 이런방식

버전이 표시되는 yarn.lock 파일이 생성됨

yarn에서는 uninstall 대신 remove 사용
--save-dev 대신 -D 사용 

스크립트를 사용핼 떄 yarn이 조금 더 편리함
yarn lint 이런식으로 가능
